<div class="w-full">
  <% if notice.present? %>
    <p class="py-2 px-3 bg-green-50 mb-5 text-green-500 font-medium rounded-lg inline-block" id="notice"><%= notice %></p>
  <% end %>

  <div class="flex justify-between items-center">
    <h1 class="font-bold text-4xl">User applications</h1>
    <%= link_to "New user application", new_user_application_path, class: "rounded-lg py-3 px-5 bg-blue-600 text-white block font-medium" %>
  </div>

  <%= render partial: "sort_by" %>

  <div id="user_applications" class="min-w-full">
    <%= render @user_applications %>
  </div>
</div>  

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const containers = document.querySelectorAll('.text-container');
    const buttons = document.querySelectorAll('.read-more');

    // Function to check if the text is overflowing its container
    function isOverflown(element) {
      return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;
    }

    containers.forEach((container, index) => {
      const button = buttons[index]; // Corresponding button for each container

      // Initially hide the button if text is not overflowing
      if (!isOverflown(container)) {
        button.style.display = 'none';
      } else {
        button.style.display = 'inline'; // Ensure it's visible if needed
      }

        // Add click event listener to each button
      button.addEventListener('click', function() {
        if (container.classList.contains('line-clamp-4')) {
          container.classList.remove('line-clamp-4'); // Remove clamping
          button.textContent = 'Read Less';
        } else {
          container.classList.add('line-clamp-4'); // Add clamping
          button.textContent = 'Read More';
        }
      });
    });
  });
</script>

